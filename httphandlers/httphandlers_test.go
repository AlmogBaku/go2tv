package httphandlers

import (
	"bytes"
	"fmt"
	"io"
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
	"time"

	"github.com/alexballas/go2tv/soapcalls"
)

func TestServeContent(t *testing.T) {
	videoBytes := []byte{0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x6D, 0x70, 0x34, 0x32, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x70, 0x34, 0x32, 0x6D, 0x70, 0x34, 0x31, 0x69, 0x73, 0x6F, 0x6D, 0x69, 0x73, 0x6F, 0x32, 0x00, 0x00, 0x00, 0x08, 0x66, 0x72, 0x65, 0x65, 0x00, 0x00, 0x0A, 0xC8, 0x6D, 0x64, 0x61, 0x74, 0x00, 0x00, 0x00, 0x02, 0x09, 0x10, 0x00, 0x00, 0x00, 0x1D, 0x67, 0xF4, 0x00, 0x0D, 0x91, 0x9B, 0x29, 0xBF, 0x2C, 0xB8, 0x0B, 0x50, 0x60, 0x10, 0x54, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x03, 0x00, 0xA2, 0x3C, 0x50, 0xA6, 0x58, 0x00, 0x00, 0x00, 0x05, 0x68, 0xEB, 0xEC, 0x44, 0x80, 0x00, 0x00, 0x02, 0xF5, 0x06, 0x05, 0xFF, 0xFF, 0xF1, 0xDC, 0x45, 0xE9, 0xBD, 0xE6, 0xD9, 0x48, 0xB7, 0x96, 0x2C, 0xD8, 0x20, 0xD9, 0x23, 0xEE, 0xEF, 0x78, 0x32, 0x36, 0x34, 0x20, 0x2D, 0x20, 0x63, 0x6F, 0x72, 0x65, 0x20, 0x31, 0x35, 0x32, 0x20, 0x72, 0x32, 0x38, 0x35, 0x34, 0x20, 0x65, 0x39, 0x61, 0x35, 0x39, 0x30, 0x33, 0x20, 0x2D, 0x20, 0x48, 0x2E, 0x32, 0x36, 0x34, 0x2F, 0x4D, 0x50, 0x45, 0x47, 0x2D, 0x34, 0x20, 0x41, 0x56, 0x43, 0x20, 0x63, 0x6F, 0x64, 0x65, 0x63, 0x20, 0x2D, 0x20, 0x43, 0x6F, 0x70, 0x79, 0x6C, 0x65, 0x66, 0x74, 0x20, 0x32, 0x30, 0x30, 0x33, 0x2D, 0x32, 0x30, 0x31, 0x37, 0x20, 0x2D, 0x20, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x6C, 0x61, 0x6E, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x78, 0x32, 0x36, 0x34, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x20, 0x2D, 0x20, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x3A, 0x20, 0x63, 0x61, 0x62, 0x61, 0x63, 0x3D, 0x31, 0x20, 0x72, 0x65, 0x66, 0x3D, 0x33, 0x20, 0x64, 0x65, 0x62, 0x6C, 0x6F, 0x63, 0x6B, 0x3D, 0x31, 0x3A, 0x30, 0x3A, 0x30, 0x20, 0x61, 0x6E, 0x61, 0x6C, 0x79, 0x73, 0x65, 0x3D, 0x30, 0x78, 0x31, 0x3A, 0x30, 0x78, 0x31, 0x31, 0x31, 0x20, 0x6D, 0x65, 0x3D, 0x68, 0x65, 0x78, 0x20, 0x73, 0x75, 0x62, 0x6D, 0x65, 0x3D, 0x37, 0x20, 0x70, 0x73, 0x79, 0x3D, 0x31, 0x20, 0x70, 0x73, 0x79, 0x5F, 0x72, 0x64, 0x3D, 0x31, 0x2C, 0x30, 0x30, 0x3A, 0x30, 0x2C, 0x30, 0x30, 0x20, 0x6D, 0x69, 0x78, 0x65, 0x64, 0x5F, 0x72, 0x65, 0x66, 0x3D, 0x31, 0x20, 0x6D, 0x65, 0x5F, 0x72, 0x61, 0x6E, 0x67, 0x65, 0x3D, 0x31, 0x36, 0x20, 0x63, 0x68, 0x72, 0x6F, 0x6D, 0x61, 0x5F, 0x6D, 0x65, 0x3D, 0x31, 0x20, 0x74, 0x72, 0x65, 0x6C, 0x6C, 0x69, 0x73, 0x3D, 0x31, 0x20, 0x38, 0x78, 0x38, 0x64, 0x63, 0x74, 0x3D, 0x30, 0x20, 0x63, 0x71, 0x6D, 0x3D, 0x30, 0x20, 0x64, 0x65, 0x61, 0x64, 0x7A, 0x6F, 0x6E, 0x65, 0x3D, 0x32, 0x31, 0x2C, 0x31, 0x31, 0x20, 0x66, 0x61, 0x73, 0x74, 0x5F, 0x70, 0x73, 0x6B, 0x69, 0x70, 0x3D, 0x31, 0x20, 0x63, 0x68, 0x72, 0x6F, 0x6D, 0x61, 0x5F, 0x71, 0x70, 0x5F, 0x6F, 0x66, 0x66, 0x73, 0x65, 0x74, 0x3D, 0x34, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x3D, 0x31, 0x20, 0x6C, 0x6F, 0x6F, 0x6B, 0x61, 0x68, 0x65, 0x61, 0x64, 0x5F, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x3D, 0x31, 0x20, 0x73, 0x6C, 0x69, 0x63, 0x65, 0x64, 0x5F, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x3D, 0x30, 0x20, 0x6E, 0x72, 0x3D, 0x30, 0x20, 0x64, 0x65, 0x63, 0x69, 0x6D, 0x61, 0x74, 0x65, 0x3D, 0x31, 0x20, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6C, 0x61, 0x63, 0x65, 0x64, 0x3D, 0x30, 0x20, 0x62, 0x6C, 0x75, 0x72, 0x61, 0x79, 0x5F, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x74, 0x3D, 0x30, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6E, 0x65, 0x64, 0x5F, 0x69, 0x6E, 0x74, 0x72, 0x61, 0x3D, 0x30, 0x20, 0x62, 0x66, 0x72, 0x61, 0x6D, 0x65, 0x73, 0x3D, 0x33, 0x20, 0x62, 0x5F, 0x70, 0x79, 0x72, 0x61, 0x6D, 0x69, 0x64, 0x3D, 0x32, 0x20, 0x62, 0x5F, 0x61, 0x64, 0x61, 0x70, 0x74, 0x3D, 0x31, 0x20, 0x62, 0x5F, 0x62, 0x69, 0x61, 0x73, 0x3D, 0x30, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x3D, 0x31, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x62, 0x3D, 0x31, 0x20, 0x6F, 0x70, 0x65, 0x6E, 0x5F, 0x67, 0x6F, 0x70, 0x3D, 0x30, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x70, 0x3D, 0x32, 0x20, 0x6B, 0x65, 0x79, 0x69, 0x6E, 0x74, 0x3D, 0x32, 0x30, 0x30, 0x20, 0x6B, 0x65, 0x79, 0x69, 0x6E, 0x74, 0x5F, 0x6D, 0x69, 0x6E, 0x3D, 0x32, 0x30, 0x20, 0x73, 0x63, 0x65, 0x6E, 0x65, 0x63, 0x75, 0x74, 0x3D, 0x34, 0x30, 0x20, 0x69, 0x6E, 0x74, 0x72, 0x61, 0x5F, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x3D, 0x30, 0x20, 0x72, 0x63, 0x5F, 0x6C, 0x6F, 0x6F, 0x6B, 0x61, 0x68, 0x65, 0x61, 0x64, 0x3D, 0x34, 0x30, 0x20, 0x72, 0x63, 0x3D, 0x63, 0x62, 0x72, 0x20, 0x6D, 0x62, 0x74, 0x72, 0x65, 0x65, 0x3D, 0x31, 0x20, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x3D, 0x32, 0x30, 0x34, 0x38, 0x20, 0x72, 0x61, 0x74, 0x65, 0x74, 0x6F, 0x6C, 0x3D, 0x31, 0x2C, 0x30, 0x20, 0x71, 0x63, 0x6F, 0x6D, 0x70, 0x3D, 0x30, 0x2C, 0x36, 0x30, 0x20, 0x71, 0x70, 0x6D, 0x69, 0x6E, 0x3D, 0x30, 0x20, 0x71, 0x70, 0x6D, 0x61, 0x78, 0x3D, 0x36, 0x39, 0x20, 0x71, 0x70, 0x73, 0x74, 0x65, 0x70, 0x3D, 0x34, 0x20, 0x76, 0x62, 0x76, 0x5F, 0x6D, 0x61, 0x78, 0x72, 0x61, 0x74, 0x65, 0x3D, 0x32, 0x30, 0x34, 0x38, 0x20, 0x76, 0x62, 0x76, 0x5F, 0x62, 0x75, 0x66, 0x73, 0x69, 0x7A, 0x65, 0x3D, 0x31, 0x32, 0x32, 0x38, 0x20, 0x6E, 0x61, 0x6C, 0x5F, 0x68, 0x72, 0x64, 0x3D, 0x6E, 0x6F, 0x6E, 0x65, 0x20, 0x66, 0x69, 0x6C, 0x6C, 0x65, 0x72, 0x3D, 0x30, 0x20, 0x69, 0x70, 0x5F, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x3D, 0x31, 0x2C, 0x34, 0x30, 0x20, 0x61, 0x71, 0x3D, 0x31, 0x3A, 0x31, 0x2C, 0x30, 0x30, 0x00, 0x80, 0x00, 0x00, 0x07, 0x93, 0x65, 0x88, 0x84, 0x00, 0x1A, 0xFF, 0xFE, 0xCC, 0x7B, 0xEC, 0x66, 0x5D, 0xD8, 0xAE, 0xB9, 0xED, 0xC7, 0x62, 0x6B, 0x09, 0xAC, 0xA3, 0x8D, 0x0A, 0xC6, 0x88, 0x6B, 0xC7, 0x47, 0x05, 0x5D, 0x94, 0x02, 0xD3, 0xCC, 0x82, 0x82, 0xD9, 0x7F, 0xA4, 0x6A, 0xCD, 0x75, 0x2D, 0x51, 0xBF, 0x1D, 0xD6, 0x41, 0x80, 0x95, 0x3A, 0x54, 0x40, 0x23, 0xB8, 0x3D, 0x88, 0xC0, 0xF5, 0x9F, 0xED, 0xB9, 0x83, 0xD6, 0xD7, 0x5B, 0xD1, 0x98, 0x9F, 0xFD, 0x48, 0xDA, 0xD6, 0x07, 0xEE, 0x49, 0x9E, 0xF1, 0x0F, 0xD4, 0x01, 0x86, 0x8F, 0x8A, 0x4F, 0x94, 0x5F, 0x9F, 0xFC, 0xBE, 0x61, 0x2C, 0x8D, 0xF7, 0xC8, 0xCF, 0x39, 0xB3, 0x46, 0x95, 0x42, 0x25, 0x96, 0x52, 0xC1, 0x6E, 0xE5, 0x36, 0x9A, 0x60, 0x8E, 0xA3, 0x8C, 0x41, 0x3A, 0xC8, 0x3D, 0x6B, 0x40, 0x9C, 0x71, 0x82, 0x82, 0x19, 0xCF, 0xD0, 0xBC, 0x0C, 0x24, 0x84, 0xC5, 0x4F, 0xBA, 0x08, 0x42, 0xA9, 0x48, 0x3F, 0x41, 0xEE, 0x0E, 0xCA, 0x49, 0x97, 0xBB, 0xB6, 0xCE, 0x8D, 0x06, 0xD7, 0x8D, 0x84, 0xC7, 0xAF, 0xC4, 0x4E, 0xB3, 0x2F, 0xC2, 0x88, 0xD6, 0xA0, 0xDA, 0xCB, 0x51, 0x1D, 0xBB, 0x5B, 0xAD, 0xA3, 0x92, 0xBC, 0xCB, 0xDA, 0x88, 0x0A, 0x35, 0xA8, 0xC5, 0x16, 0x58, 0xE3, 0x5B, 0x53, 0xB5, 0xD0, 0xEA, 0xE6, 0x4A, 0x2D, 0x02, 0x5A, 0x09, 0xC3, 0xD3, 0xCB, 0xAA, 0x69, 0x26, 0xCB, 0x9A, 0x04, 0x7E, 0x58, 0x33, 0xAC, 0x49, 0xB9, 0x47, 0xAE, 0x70, 0x0E, 0xEC, 0xEE, 0xD5, 0x90, 0x55, 0xC3, 0x9F, 0x4A, 0xB8, 0xC2, 0xCC, 0x01, 0xDB, 0x55, 0x88, 0xA8, 0x1D, 0x4D, 0xB4, 0xB6, 0xD1, 0xF1, 0xE4, 0x6B, 0xCA, 0x1A, 0xF3, 0xA4, 0xE6, 0xCD, 0x96, 0xF8, 0x41, 0x5C, 0x3B, 0xCB, 0xFF, 0xFF, 0x04, 0x91, 0x31, 0x4E, 0xB6, 0x97, 0x86, 0x3A, 0xEB, 0x2C, 0x94, 0xB3, 0x5D, 0x28, 0xE8, 0xA5, 0xC3, 0x1E, 0xE5, 0xCF, 0x97, 0xEC, 0xE6, 0x24, 0x48, 0x70, 0x23, 0x99, 0xE2, 0x34, 0x6D, 0x6D, 0x73, 0x2A, 0xAA, 0x4D, 0x4D, 0x3C, 0x6D, 0xDE, 0x73, 0x78, 0x83, 0xAA, 0xC5, 0x32, 0x58, 0x9E, 0x3E, 0x96, 0x10, 0xC9, 0x01, 0x9F, 0x5E, 0x65, 0x66, 0x18, 0xEA, 0xB6, 0x90, 0xE6, 0x19, 0x00, 0x8A, 0x23, 0x6A, 0x27, 0xEC, 0xDE, 0xB0, 0x2D, 0xD3, 0xD3, 0x1E, 0xEE, 0x86, 0xA9, 0x2B, 0xE4, 0x3F, 0x5A, 0x99, 0x62, 0xE1, 0x59, 0x00, 0xF9, 0xCF, 0x35, 0xFB, 0xAD, 0x1A, 0x7C, 0x9D, 0x5D, 0xC0, 0xB3, 0x45, 0x16, 0x0A, 0x84, 0xC7, 0x14, 0xA5, 0x48, 0x4D, 0x7B, 0x7D, 0xE7, 0x7B, 0xEF, 0x38, 0x56, 0x77, 0x8B, 0x4C, 0x05, 0x78, 0x39, 0xA6, 0xCF, 0xC6, 0x02, 0x6E, 0x88, 0x21, 0x03, 0x9A, 0x25, 0x6E, 0xB7, 0x47, 0x7A, 0x8C, 0x0E, 0x43, 0xC8, 0x50, 0x60, 0x4E, 0xC5, 0x23, 0x9C, 0xE1, 0xD9, 0xA8, 0x7F, 0x91, 0x59, 0x23, 0x20, 0x98, 0x16, 0xB1, 0x38, 0xB1, 0xC0, 0x25, 0xD1, 0x6C, 0x5A, 0x55, 0x91, 0x0B, 0xF5, 0xC2, 0x64, 0x27, 0xE7, 0xBF, 0x54, 0xEE, 0x90, 0x93, 0xC7, 0x52, 0x95, 0x4E, 0x66, 0x85, 0xF6, 0xFD, 0x04, 0x2B, 0xA9, 0xF0, 0xAC, 0xAD, 0xED, 0x10, 0x22, 0x1C, 0x02, 0x08, 0x4B, 0x7F, 0x89, 0x2B, 0x0D, 0x8E, 0xCC, 0x87, 0x7A, 0x70, 0x68, 0x26, 0xCA, 0x4D, 0xB9, 0x01, 0x07, 0x53, 0x79, 0xEE, 0x2D, 0xAF, 0xEF, 0xB0, 0xE4, 0x92, 0xE0, 0x71, 0xF9, 0x61, 0x53, 0xE0, 0xA8, 0x39, 0x74, 0x99, 0x76, 0xB0, 0xE7, 0xDC, 0x2B, 0x70, 0x55, 0xFB, 0xC7, 0xE5, 0x32, 0x99, 0x88, 0xFF, 0xDC, 0x2C, 0x35, 0x18, 0x25, 0x49, 0x5E, 0x0E, 0x2B, 0xCA, 0xAE, 0x1E, 0xA6, 0x01, 0x93, 0xB9, 0x7B, 0xEB, 0x9F, 0xAE, 0xF3, 0xF2, 0x7A, 0x35, 0x84, 0xD2, 0x8F, 0x5A, 0x83, 0x06, 0xBE, 0xE7, 0xC8, 0xE9, 0x43, 0x5A, 0x29, 0x96, 0xDA, 0x3C, 0x13, 0x79, 0x84, 0x81, 0x60, 0x79, 0x64, 0xDA, 0x12, 0xC0, 0x01, 0xF2, 0x1E, 0x2D, 0xC8, 0x34, 0x4C, 0x1D, 0xE1, 0xB2, 0xD0, 0x74, 0xE7, 0xF5, 0x0C, 0x4A, 0xE2, 0x92, 0x57, 0xF1, 0x45, 0x30, 0x84, 0xB6, 0x54, 0xED, 0x4D, 0xB3, 0x0D, 0xEF, 0xDD, 0x39, 0xAC, 0x0C, 0x45, 0xE2, 0xD8, 0x3F, 0x80, 0x6D, 0x48, 0xEC, 0x23, 0x8A, 0x5F, 0xAE, 0x9D, 0x2E, 0x0D, 0xB1, 0x34, 0x62, 0xDF, 0x63, 0xFF, 0x15, 0xC0, 0xB5, 0x13, 0xFE, 0x30, 0x92, 0x7B, 0x72, 0xC7, 0xAF, 0x13, 0xB8, 0xEF, 0x15, 0x05, 0xBD, 0x30, 0x07, 0xFF, 0x67, 0x2A, 0x86, 0x87, 0xEB, 0xA4, 0xBC, 0xC3, 0x54, 0x4D, 0xAC, 0x22, 0x89, 0xE9, 0x10, 0x6B, 0xDF, 0xFE, 0xC6, 0x94, 0x6E, 0x95, 0xFE, 0x9A, 0xCC, 0x78, 0x2C, 0x87, 0x27, 0x5C, 0x16, 0xB4, 0x84, 0x5C, 0x1A, 0x7C, 0x4B, 0xEA, 0xBB, 0x07, 0xAF, 0x8A, 0x7D, 0x45, 0x2A, 0x02, 0x00, 0x65, 0xD3, 0xBB, 0xFF, 0x75, 0x78, 0x71, 0xFC, 0x1F, 0x45, 0x1C, 0x5C, 0xA5, 0x9A, 0xF5, 0x89, 0x9D, 0xDE, 0xE7, 0xDC, 0xEE, 0x9E, 0xB1, 0x85, 0x1E, 0xBC, 0xA3, 0xB3, 0x16, 0xFD, 0x6C, 0x41, 0xE3, 0xEF, 0xD3, 0x9D, 0x6C, 0xCF, 0x12, 0x8D, 0x18, 0xD1, 0xC0, 0x2A, 0x54, 0x94, 0xD8, 0x05, 0x84, 0x67, 0xD6, 0x1C, 0x5A, 0x77, 0x7F, 0x56, 0x90, 0xAB, 0x6D, 0x4D, 0x5E, 0x0D, 0xF3, 0x21, 0x74, 0x35, 0x75, 0xD2, 0xFC, 0x7D, 0x68, 0xFC, 0xB0, 0x83, 0x92, 0x2F, 0x98, 0xFA, 0x35, 0x68, 0x71, 0xD4, 0x33, 0xDB, 0x1C, 0x7D, 0xCC, 0x14, 0xD8, 0x0D, 0xCF, 0x2D, 0x1F, 0x18, 0xDB, 0x3A, 0x46, 0x46, 0x7A, 0x24, 0xCD, 0xFC, 0xEE, 0xC3, 0x1C, 0x4B, 0x16, 0x38, 0xC4, 0xDC, 0x8F, 0xC8, 0x9F, 0x57, 0x15, 0x38, 0xCB, 0x37, 0x3F, 0xBF, 0xD1, 0x8A, 0x24, 0x88, 0x12, 0x25, 0x18, 0x33, 0xEC, 0x36, 0x63, 0x2B, 0x7F, 0xF8, 0x01, 0xFA, 0xA8, 0x33, 0x18, 0x56, 0x9D, 0x4E, 0x97, 0x7D, 0xBD, 0x06, 0x36, 0xBD, 0xF0, 0x67, 0x3A, 0x4F, 0x71, 0xCD, 0xFC, 0x5B, 0x50, 0x24, 0x91, 0x6A, 0x89, 0x3B, 0xE3, 0x64, 0x31, 0x20, 0x28, 0xA1, 0x88, 0x78, 0x47, 0xFE, 0x8B, 0xE8, 0x0D, 0x80, 0xC1, 0x40, 0x62, 0x32, 0xFF, 0x4F, 0x8C, 0x77, 0xDF, 0xF4, 0x8F, 0xA0, 0xD2, 0xE7, 0x2B, 0x00, 0xCA, 0xDA, 0x48, 0x25, 0x36, 0x6F, 0x7C, 0x9A, 0xA1, 0x66, 0x70, 0xFD, 0x45, 0x8D, 0xA8, 0x37, 0xA8, 0xC0, 0xA6, 0x69, 0xC6, 0xDB, 0x71, 0x00, 0x15, 0xC2, 0xF4, 0x2F, 0x8A, 0x47, 0x2B, 0x45, 0x4B, 0xD0, 0xF2, 0xCA, 0xDD, 0x68, 0x82, 0x40, 0x7C, 0xFB, 0xB4, 0x94, 0x85, 0xFF, 0x04, 0x7E, 0xC2, 0x56, 0x00, 0x8C, 0xF8, 0x93, 0x98, 0x08, 0xCC, 0xA0, 0x4F, 0x17, 0x3E, 0x67, 0x54, 0x19, 0xB2, 0x82, 0xFE, 0xCF, 0x90, 0x7E, 0xB4, 0x14, 0xE4, 0xBB, 0x24, 0x0F, 0xF2, 0x72, 0xC1, 0x2F, 0x19, 0x0A, 0xC0, 0xE6, 0x59, 0x0C, 0x7E, 0x8B, 0x92, 0x8A, 0xD9, 0x34, 0xD7, 0xAE, 0xBB, 0x19, 0xF5, 0x5C, 0xF2, 0x18, 0x7A, 0xCA, 0x34, 0x7B, 0xE6, 0x4D, 0x8D, 0xA6, 0x2B, 0x48, 0x67, 0xD4, 0xF0, 0xD0, 0x99, 0x5C, 0x0B, 0x02, 0xC2, 0xB4, 0x28, 0x59, 0xF7, 0x5A, 0x08, 0x36, 0x31, 0xF4, 0xC6, 0x65, 0x69, 0x9A, 0x04, 0x5A, 0xAA, 0x74, 0x3D, 0x04, 0x76, 0xE9, 0x40, 0x91, 0x49, 0xA5, 0x02, 0xA4, 0xCA, 0xBA, 0x2E, 0x2F, 0x6A, 0x7B, 0x67, 0xE5, 0x01, 0xFE, 0x11, 0x98, 0x2E, 0x5B, 0x96, 0xAE, 0x9D, 0x24, 0x19, 0xAB, 0xD5, 0x67, 0xEA, 0x63, 0x30, 0x7B, 0xA4, 0x39, 0xA4, 0x40, 0x6F, 0x53, 0xC6, 0xB9, 0x88, 0xF0, 0x94, 0x81, 0xDD, 0x17, 0xD7, 0x50, 0xB5, 0xD7, 0x54, 0x0A, 0x19, 0xDF, 0x01, 0xEE, 0x8A, 0xF8, 0x9E, 0x13, 0x01, 0xC3, 0x03, 0x7B, 0x09, 0x6D, 0xEB, 0xC9, 0x9F, 0xE4, 0x71, 0xE7, 0x86, 0xA5, 0x42, 0x3B, 0x2B, 0xC1, 0x31, 0x67, 0x2D, 0x56, 0xFB, 0xB2, 0x50, 0x26, 0x0A, 0xA8, 0x6C, 0xFD, 0x98, 0xA4, 0x59, 0xB3, 0xA8, 0x5F, 0xD5, 0xA3, 0x1E, 0xEC, 0x33, 0x3B, 0xB5, 0x6D, 0x4E, 0x5A, 0x7A, 0xBD, 0x23, 0xF5, 0x4D, 0x0C, 0xB5, 0x98, 0x57, 0x5E, 0x06, 0x86, 0x00, 0xAD, 0x82, 0xAA, 0xDC, 0xC4, 0xA1, 0x39, 0xD4, 0xC6, 0x73, 0x0D, 0xC1, 0x4D, 0x9E, 0x6E, 0xDF, 0x25, 0x3A, 0x70, 0x5A, 0x86, 0x41, 0x3A, 0x15, 0x2C, 0x16, 0x28, 0xE4, 0xA9, 0x3F, 0x4C, 0xCA, 0x9A, 0x20, 0x61, 0xD0, 0x79, 0x0F, 0x98, 0x54, 0xA5, 0x52, 0x7F, 0x70, 0xDB, 0x33, 0x49, 0x38, 0x9F, 0x54, 0x3B, 0xAA, 0x98, 0x83, 0xCE, 0x19, 0xC1, 0xF2, 0xBB, 0xE8, 0x54, 0xAC, 0x1B, 0x09, 0x66, 0x4D, 0xAB, 0xFF, 0x61, 0x87, 0x90, 0x00, 0x50, 0x9E, 0x29, 0xBD, 0x06, 0xA0, 0x6A, 0xEF, 0x2F, 0x36, 0xFE, 0x4E, 0xEE, 0xC9, 0x2E, 0xFB, 0x5B, 0x23, 0x18, 0xCC, 0x88, 0x99, 0xEA, 0xBA, 0x9C, 0xEF, 0x0D, 0x5C, 0xBF, 0x73, 0x63, 0xED, 0x50, 0x06, 0xCF, 0x1A, 0x4A, 0xC7, 0x42, 0xF1, 0xC1, 0x33, 0xE3, 0x59, 0xC7, 0x86, 0xE9, 0x57, 0x81, 0xFA, 0xE2, 0x66, 0xCC, 0x01, 0x61, 0x4A, 0xA8, 0xC5, 0x2B, 0xA7, 0xAB, 0x5D, 0x5A, 0x1B, 0xEC, 0x57, 0x0C, 0x6F, 0xB4, 0xFE, 0x44, 0xE0, 0x9F, 0xA4, 0xA2, 0x6C, 0xB9, 0x3E, 0x3F, 0xA9, 0xFF, 0xBE, 0x70, 0xD4, 0xB9, 0x38, 0x03, 0x9B, 0xE3, 0x68, 0xDF, 0x15, 0x1C, 0x31, 0x90, 0x43, 0x7F, 0xDB, 0x5B, 0x00, 0x26, 0x37, 0x7A, 0x04, 0xAB, 0xB3, 0x98, 0x77, 0x74, 0xEA, 0x4D, 0xDD, 0x79, 0xEF, 0x24, 0x1E, 0xDC, 0xED, 0xB8, 0xA7, 0xE7, 0xE4, 0x6D, 0x0E, 0xAC, 0x0D, 0xBC, 0x5A, 0x35, 0x65, 0x9D, 0x54, 0xBD, 0x24, 0x4E, 0x5C, 0xA7, 0x78, 0xF6, 0x35, 0xF2, 0x1A, 0x08, 0x07, 0xC4, 0xD9, 0x5F, 0x3B, 0x5D, 0xD4, 0x88, 0x66, 0xEB, 0x12, 0xE3, 0xE8, 0x4E, 0xFA, 0x2E, 0x19, 0x40, 0x2F, 0x97, 0x2F, 0x68, 0x78, 0x0D, 0x5A, 0x31, 0x9A, 0xD5, 0x46, 0xFD, 0x08, 0x13, 0xEF, 0xEE, 0x3A, 0x46, 0x63, 0x05, 0xCF, 0x74, 0xB5, 0x58, 0xE6, 0x40, 0x94, 0xB2, 0xCC, 0x46, 0x32, 0x79, 0x4C, 0xBC, 0xAE, 0x67, 0xBD, 0xA3, 0x85, 0x13, 0x95, 0x33, 0x71, 0x25, 0x72, 0x62, 0x01, 0xC0, 0x1A, 0xCC, 0xC6, 0xFB, 0x79, 0xED, 0x8D, 0xD7, 0xB4, 0x79, 0xFF, 0x1D, 0x49, 0x15, 0x7C, 0x93, 0x0E, 0x48, 0x2F, 0x5F, 0x2C, 0x5E, 0x7C, 0x61, 0x56, 0xA2, 0xF6, 0x47, 0xDB, 0x0C, 0x8D, 0x9D, 0xA6, 0x4F, 0xB8, 0x5F, 0x0B, 0x72, 0x6E, 0x8B, 0x9B, 0x78, 0xC8, 0x07, 0x1F, 0x44, 0x86, 0xDC, 0x3A, 0x90, 0xC2, 0x83, 0x2B, 0x14, 0xCD, 0x24, 0xD5, 0x4C, 0x24, 0x73, 0x64, 0x4C, 0x16, 0x9D, 0xEF, 0xCA, 0xB6, 0x86, 0x10, 0x8C, 0xB8, 0x9F, 0x40, 0x95, 0x6D, 0xE2, 0x6A, 0xD5, 0x84, 0x3F, 0x19, 0xA3, 0xBB, 0xE5, 0x33, 0x05, 0x76, 0x79, 0xFB, 0xA1, 0xF4, 0x52, 0xEB, 0x61, 0xC4, 0x4C, 0xA5, 0x20, 0x77, 0x6B, 0x2D, 0x65, 0xA5, 0x6A, 0xBC, 0x22, 0xC0, 0x48, 0xDA, 0xA9, 0x04, 0xEE, 0x3A, 0x75, 0xDE, 0xAD, 0x27, 0xB4, 0x53, 0xA8, 0xAB, 0x65, 0xE1, 0x47, 0x79, 0x04, 0x75, 0x2C, 0xFB, 0xCC, 0x29, 0x4C, 0xDD, 0xF4, 0x32, 0x1D, 0x9A, 0xE9, 0xF9, 0x5A, 0x44, 0x97, 0xB2, 0x60, 0x78, 0xB4, 0x27, 0xD8, 0xF6, 0xC1, 0xB3, 0x15, 0xC8, 0xF6, 0x5A, 0x16, 0xC5, 0x6B, 0xD3, 0x10, 0xAD, 0x60, 0x92, 0x53, 0x6B, 0x62, 0x61, 0x71, 0xB6, 0x03, 0xEE, 0xF6, 0x32, 0x7B, 0x19, 0xDB, 0x61, 0x12, 0x03, 0xA9, 0xB9, 0x7B, 0xF4, 0x3C, 0xB2, 0xF8, 0x0F, 0x7E, 0xD2, 0xF0, 0x7E, 0x2E, 0x67, 0x5F, 0x6C, 0x77, 0x93, 0x52, 0xA1, 0x2C, 0x45, 0xCB, 0x52, 0xDB, 0x5D, 0xDC, 0xF7, 0xA7, 0x71, 0x8F, 0x9C, 0x55, 0x12, 0x19, 0x45, 0xEC, 0x7E, 0xA3, 0xBE, 0xDE, 0x24, 0x90, 0xA0, 0x9D, 0x28, 0x75, 0x60, 0x9A, 0x97, 0xF8, 0x08, 0x3B, 0x97, 0xA6, 0x3F, 0xBB, 0xE9, 0xE4, 0xDC, 0xC9, 0xA4, 0xFA, 0x63, 0x82, 0x77, 0xE0, 0x6A, 0xEC, 0x6C, 0xBC, 0xB1, 0xAA, 0x16, 0xCF, 0xDF, 0x68, 0x1E, 0xA5, 0x46, 0xED, 0x3E, 0x8F, 0x7E, 0xC3, 0x54, 0x25, 0xED, 0x43, 0x8C, 0x3A, 0xE8, 0x54, 0xBB, 0x7C, 0x7B, 0xA3, 0xA3, 0x4F, 0xA6, 0x40, 0x44, 0xD3, 0x17, 0xE9, 0xD3, 0x72, 0x68, 0x2D, 0x36, 0xA7, 0xA4, 0x71, 0xED, 0x41, 0x9D, 0xFC, 0xB0, 0xE6, 0x33, 0x5F, 0x48, 0xC2, 0xC7, 0x1D, 0x1F, 0x4D, 0x0A, 0xC3, 0x0A, 0x2E, 0xEC, 0x9F, 0x65, 0xE4, 0xF2, 0x34, 0xEA, 0xBD, 0x78, 0x34, 0xE8, 0x3E, 0xB9, 0x9A, 0x08, 0x67, 0xD5, 0xEF, 0xC7, 0xEA, 0x06, 0x91, 0xFE, 0x5A, 0x5A, 0x41, 0x45, 0x6C, 0xA3, 0x2B, 0xA8, 0xEE, 0x12, 0x13, 0xEE, 0x4A, 0xE4, 0x88, 0x78, 0x2F, 0xAD, 0xF8, 0x97, 0x51, 0xCD, 0x11, 0xDF, 0x60, 0xA1, 0x95, 0xA1, 0xE2, 0x4C, 0xFB, 0xEA, 0xD7, 0x12, 0xAF, 0x4F, 0xA2, 0x59, 0x9B, 0xD9, 0xCA, 0x8C, 0x41, 0x4E, 0x1A, 0xA5, 0xBC, 0x1A, 0xF9, 0x90, 0xF8, 0xEF, 0x3D, 0xB1, 0x1A, 0x1C, 0xE0, 0x12, 0xC5, 0x15, 0x8C, 0x88, 0x0D, 0x37, 0x47, 0x87, 0x44, 0x6F, 0x9C, 0x1D, 0x12, 0x1B, 0xC5, 0xD8, 0x18, 0xD7, 0x31, 0x97, 0xC5, 0x3C, 0xEA, 0x57, 0x52, 0x4F, 0x42, 0x6F, 0xD6, 0xC5, 0xBF, 0xBE, 0xA5, 0x20, 0x91, 0x98, 0x40, 0xCD, 0x1B, 0xE9, 0x89, 0xFC, 0xE5, 0x1A, 0xC5, 0xB9, 0xAA, 0x15, 0x08, 0x9D, 0x3D, 0x47, 0x94, 0x6A, 0x7C, 0x68, 0xC0, 0x91, 0xC8, 0xA9, 0x5F, 0x58, 0xB6, 0x92, 0x38, 0xA5, 0xE3, 0x80, 0x36, 0x86, 0xD5, 0xE5, 0x1B, 0x0E, 0xDA, 0x67, 0x8E, 0x3E, 0xB7, 0x9F, 0x4F, 0xBE, 0x30, 0x3B, 0xF9, 0x5B, 0x58, 0x31, 0x62, 0xB7, 0x52, 0x96, 0xAA, 0x7A, 0xFE, 0xCF, 0xE0, 0x6B, 0xFF, 0x71, 0xC5, 0xA4, 0x1F, 0x8C, 0x2D, 0xA7, 0xDD, 0x81, 0x1C, 0xF4, 0xB5, 0xDE, 0xE7, 0x01, 0x19, 0xD4, 0x0A, 0xD9, 0xA2, 0x46, 0x92, 0x50, 0x15, 0xBF, 0x71, 0xFE, 0xDC, 0x2E, 0xE3, 0xE4, 0xC3, 0x5F, 0x55, 0x9C, 0xAF, 0x63, 0x4F, 0x17, 0x2B, 0x09, 0x9A, 0x43, 0x65, 0x4C, 0x0F, 0x50, 0x8E, 0xE1, 0x00, 0x00, 0x05, 0x4E, 0x6D, 0x6F, 0x6F, 0x76, 0x00, 0x00, 0x00, 0x6C, 0x6D, 0x76, 0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x7E, 0x12, 0x2A, 0xDE, 0x7E, 0x12, 0x2A, 0x00, 0x00, 0x07, 0xD0, 0x00, 0x00, 0x00, 0x64, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x02, 0xC4, 0x74, 0x72, 0x61, 0x6B, 0x00, 0x00, 0x00, 0x5C, 0x74, 0x6B, 0x68, 0x64, 0x00, 0x00, 0x00, 0x07, 0xDE, 0x7E, 0x12, 0x2A, 0xDE, 0x7E, 0x12, 0x2A, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x65, 0x64, 0x74, 0x73, 0x00, 0x00, 0x00, 0x1C, 0x65, 0x6C, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE3, 0x6D, 0x64, 0x69, 0x61, 0x00, 0x00, 0x00, 0x20, 0x6D, 0x64, 0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x7E, 0x12, 0x2A, 0xDE, 0x7E, 0x12, 0x2A, 0x00, 0x00, 0x07, 0xD0, 0x00, 0x00, 0x00, 0x64, 0x55, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x69, 0x64, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x69, 0x64, 0x65, 0x6F, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x00, 0x00, 0x00, 0x01, 0x8E, 0x6D, 0x69, 0x6E, 0x66, 0x00, 0x00, 0x00, 0x14, 0x76, 0x6D, 0x68, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x64, 0x69, 0x6E, 0x66, 0x00, 0x00, 0x00, 0x1C, 0x64, 0x72, 0x65, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x75, 0x72, 0x6C, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x4E, 0x73, 0x74, 0x62, 0x6C, 0x00, 0x00, 0x00, 0xD2, 0x73, 0x74, 0x73, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC2, 0x61, 0x76, 0x63, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x2C, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x35, 0x61, 0x76, 0x63, 0x43, 0x01, 0xF4, 0x00, 0x0D, 0xFF, 0xE1, 0x00, 0x1D, 0x67, 0xF4, 0x00, 0x0D, 0x91, 0x9B, 0x29, 0xBF, 0x2C, 0xB8, 0x0B, 0x50, 0x60, 0x10, 0x54, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x03, 0x00, 0xA2, 0x3C, 0x50, 0xA6, 0x58, 0x01, 0x00, 0x05, 0x68, 0xEB, 0xEC, 0x44, 0x80, 0x00, 0x00, 0x00, 0x14, 0x62, 0x74, 0x72, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x06, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x13, 0x63, 0x6F, 0x6C, 0x72, 0x6E, 0x63, 0x6C, 0x78, 0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x70, 0x61, 0x73, 0x70, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x73, 0x74, 0x74, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x14, 0x73, 0x74, 0x73, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x73, 0x74, 0x73, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x73, 0x74, 0x73, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0A, 0xC0, 0x00, 0x00, 0x00, 0x14, 0x73, 0x74, 0x63, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x59, 0x75, 0x64, 0x74, 0x61, 0x00, 0x00, 0x00, 0x51, 0x6D, 0x65, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x68, 0x6C, 0x72, 0x6D, 0x64, 0x69, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x69, 0x6C, 0x73, 0x74, 0x00, 0x00, 0x00, 0x1C, 0xA9, 0x74, 0x6F, 0x6F, 0x00, 0x00, 0x00, 0x14, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x78, 0x32, 0x36, 0x34, 0x00, 0x00, 0x01, 0xD9, 0x74, 0x72, 0x61, 0x6B, 0x00, 0x00, 0x00, 0x5C, 0x74, 0x6B, 0x68, 0x64, 0x00, 0x00, 0x00, 0x07, 0xDE, 0x7E, 0x12, 0x2A, 0xDE, 0x7E, 0x12, 0x2A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x38, 0x6D, 0x64, 0x69, 0x61, 0x00, 0x00, 0x00, 0x20, 0x6D, 0x64, 0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x7E, 0x12, 0x2A, 0xDE, 0x7E, 0x12, 0x2A, 0x00, 0x00, 0x1F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x55, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x6F, 0x75, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x6F, 0x75, 0x6E, 0x64, 0x48, 0x61, 0x6E, 0x64, 0x6C, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x6D, 0x69, 0x6E, 0x66, 0x00, 0x00, 0x00, 0x10, 0x73, 0x6D, 0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x64, 0x69, 0x6E, 0x66, 0x00, 0x00, 0x00, 0x1C, 0x64, 0x72, 0x65, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x75, 0x72, 0x6C, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xA7, 0x73, 0x74, 0x62, 0x6C, 0x00, 0x00, 0x00, 0x5B, 0x73, 0x74, 0x73, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4B, 0x6D, 0x70, 0x34, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x65, 0x73, 0x64, 0x73, 0x00, 0x00, 0x00, 0x00, 0x03, 0x19, 0x00, 0x02, 0x00, 0x04, 0x11, 0x40, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x02, 0x15, 0x88, 0x06, 0x01, 0x02, 0x00, 0x00, 0x00, 0x10, 0x73, 0x74, 0x74, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x74, 0x73, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x73, 0x74, 0x73, 0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x74, 0x63, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x75, 0x64, 0x74, 0x61, 0x00, 0x00, 0x00, 0x35, 0x6D, 0x65, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x68, 0x6C, 0x72, 0x6D, 0x64, 0x69, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x69, 0x6C, 0x73, 0x74, 0x00, 0x00, 0x00, 0x3D, 0x75, 0x64, 0x74, 0x61, 0x00, 0x00, 0x00, 0x35, 0x6D, 0x65, 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x68, 0x6C, 0x72, 0x6D, 0x64, 0x69, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x69, 0x6C, 0x73, 0x74}

	tt := []struct {
		input  interface{}
		tvdata *soapcalls.TVPayload
		name   string
	}{
		{
			[]byte(""),
			nil,
			`Check []byte input`,
		},
		{
			io.NopCloser(bytes.NewReader([]byte(""))),
			nil,
			`Check io.Reader input #2`,
		},
		{
			osFileType{
				time: time.Now(),
				file: bytes.NewReader(videoBytes),
			},
			&soapcalls.TVPayload{
				Transcode: false,
				MediaType: "video/mp4",
			},
			`File without transcoding`,
		},
		// This test will fail if we dont have ffmpeg installed
		{
			osFileType{
				time: time.Now(),
				file: bytes.NewReader(videoBytes),
			},
			&soapcalls.TVPayload{
				Transcode: true,
				MediaType: "video/mp4",
			},
			`File with transcoding`,
		},
	}

	for _, tc := range tt {
		w := httptest.NewRecorder()
		r := httptest.NewRequest(http.MethodGet, "/", nil)

		r.Header.Add("getcontentFeatures.dlna.org", "1")

		serveContent(w, r, tc.tvdata, tc.input)

		if w.Result().StatusCode != http.StatusOK {
			t.Errorf("%s: got: %s.", tc.name, w.Result().Status)
		}

		_, exists := w.Result().Header["transferMode.dlna.org"]
		if !exists {
			t.Errorf("%s: transferMode.dlna.org header does not exist", tc.name)
		}

		cf, exists := w.Result().Header["contentFeatures.dlna.org"]
		if !exists {
			t.Errorf("%s: contentFeatures.dlna.org header does not exist", tc.name)
		}

		cfElements := strings.Split(cf[0], ";")
		for _, c := range cfElements {
			if strings.Contains(c, "DLNA.ORG_OP") {
				if tc.tvdata != nil && tc.tvdata.Transcode && c != "DLNA.ORG_OP=00" {
					fmt.Println("yoooo", c)
					t.Errorf("%s: no proper DLNA.ORG_OP header for transcoded video", tc.name)
				}
			}
		}

	}
}

type rsCloser struct {
	io.ReadSeeker
}

func addCloserToRS(i io.ReadSeeker) io.ReadSeekCloser {
	return rsCloser{i}
}

func (rsCloser) Close() error { return nil }
